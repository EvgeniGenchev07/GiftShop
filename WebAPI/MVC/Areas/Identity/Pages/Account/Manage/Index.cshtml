@page
@model IndexModel
@{
    ViewData["Title"] = "Profile";
    ViewData["ActivePage"] = ManageNavPages.Index;
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <style>
        /* Basic Reset */
        * {
        margin: 0;
        padding: 0;
        box-sizing: border-box;
        font-family: 'Arial', sans-serif;
        }

        body {
        line-height: 1.6;
        color: #333;
        background-color: #f9f9f9;
        }



        /* Header Styles */


        /* Account Dashboard */
        .account-dashboard {
        display: flex;
        flex-wrap: wrap;
        gap: 30px;
        padding: 40px 0;
        }

        /* Sidebar Navigation */
        .account-sidebar {
        flex: 0 0 250px;
        background: white;
        margin-top: 2.5rem;
        border-radius: 8px;
        box-shadow: 0 5px 15px rgba(0,0,0,0.1);
        padding: 20px;
        }

        .account-sidebar h3 {
        margin-bottom: 20px;
        padding-bottom: 10px;
        border-bottom: 1px solid #eee;
        color: #e63946;
        }

        .account-menu {
        list-style: none;
        }

        .account-menu li {
        margin-bottom: 10px;
        }

        .account-menu a {
        display: block;
        padding: 8px 0;
        color: #333;
        text-decoration: none;
        transition: color 0.3s;
        }

        .account-menu a:hover, .account-menu a.active {
        color: #e63946;
        font-weight: bold;
        }

        .account-menu i {
        width: 25px;
        text-align: center;
        margin-right: 10px;
        }

        /* Main Content Area */
        .account-content {
        flex: 1;
        min-width: 300px;
        background: white;
        border-radius: 8px;
        box-shadow: 0 5px 15px rgba(0,0,0,0.1);
        padding: 30px;
        }

        .account-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 30px;
        padding-bottom: 20px;
        border-bottom: 1px solid #eee;
        }

        .account-header h2 {
        color: #e63946;
        }

        .welcome-message {
        margin-bottom: 20px;
        }

        /* Order Tracking */
        .order-card {
        border: 1px solid #eee;
        border-radius: 8px;
        padding: 20px;
        margin-bottom: 20px;
        transition: box-shadow 0.3s;
        }

        .order-card:hover {
        box-shadow: 0 5px 15px rgba(0,0,0,0.1);
        }

        .order-header {
        display: flex;
        justify-content: space-between;
        margin-bottom: 15px;
        }

        .order-id {
        font-weight: bold;
        }

        .order-date {
        color: #666;
        }

        .order-status {
        display: inline-block;
        padding: 3px 10px;
        border-radius: 20px;
        font-size: 14px;
        font-weight: bold;
        }

        .status-inprogress {
        background-color: #fff3cd;
        color: #856404;
        }

        .status-confirmed {
        background-color: #cce5ff;
        color: #004085;
        }

        .status-canceled {
        background-color: #f8d7da;
        color: #721c24;
        }
        .status-delivered {
        background-color: #d4edda;
        color: #155724;
        }

        .order-details {
        display: flex;
        flex-wrap: wrap;
        gap: 20px;
        margin-top: 15px;
        }

        .order-items {
        flex: 1;
        min-width: 200px;
        }

        .order-item {
        display: flex;
        margin-bottom: 15px;
        }

        .order-item-img {
        width: 80px;
        height: 80px;
        object-fit: cover;
        border-radius: 4px;
        margin-right: 15px;
        }

        .order-summary {
        flex: 0 0 200px;
        }

        .summary-row {
        display: flex;
        justify-content: space-between;
        margin-bottom: 10px;
        }

        .order-actions {
        margin-top: 20px;
        display: flex;
        gap: 10px;
        }

        .btn {
        padding: 8px 15px;
        border-radius: 4px;
        border: none;
        cursor: pointer;
        font-weight: bold;
        transition: background-color 0.3s;
        }

        .btn-primary {
        background-color: #e63946;
        color: white;
        }

        .btn-primary:hover {
        background-color: #c1121f;
        }

        .btn-secondary {
        background-color: #f1faee;
        color: #333;
        }

        .btn-secondary:hover {
        background-color: #e2e8e0;
        }

        /* Profile Section */
        .profile-form {
        max-width: 600px;
        }

        .form-group {
        margin-bottom: 20px;
        }

        .form-group label {
        display: block;
        margin-bottom: 5px;
        font-weight: bold;
        }

        .form-control {
        width: 100%;
        padding: 10px;
        border: 1px solid #ddd;
        border-radius: 4px;
        }

        /* Address Book */
        .address-cards {
        display: grid;
        grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
        gap: 20px;
        }

        .address-card {
        border: 1px solid #eee;
        border-radius: 8px;
        padding: 20px;
        position: relative;
        }

        .address-card.default {
        border-color: #e63946;
        }

        .address-type {
        position: absolute;
        top: 10px;
        right: 10px;
        background-color: #e63946;
        color: white;
        padding: 2px 8px;
        border-radius: 4px;
        font-size: 12px;
        }

        /* Responsive */
        media (max-width: 768px) {
        .account-dashboard

        {
        flex-direction: column;
        }

        .account-sidebar {
        flex: 1;
        }

        .order-header {
        flex-direction: column;
        gap: 10px;
        }

        }
    </style>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
</head>
<body>

<div class="container">
    <div class="account-dashboard">
        <!-- Sidebar Navigation -->


        <!-- Main Content Area -->
        <main class="account-content">
            <div class="account-header">
                <h2>Order Dashboard</h2>
                <div class="welcome-message">Welcome back, @Model.Data.Name!</div>
            </div>

            <!-- Recent Orders Section -->
            <h3>Recent Orders</h3>

            <!-- Order Card 1 -->
            @{
                string[] months = ["January", "February", "March", "April", "May", "June", 
                    "July", "August", "September", "October", "November", "December"];
                foreach (var item in Model.Data.Orders)
                {
                    decimal total = item.OrderedProducts.Sum(o => o.Quantity * o.Product.Price);
                    var status = item.Status;
                    var dateOfCreation = item.Created;
                    <div class="order-card" data-id="@item.Id">
                        <div class="order-header">
                            <div>
                                <span class="order-id">Order #@item.Id</span>
                                <span class="order-date"> - Placed on @months[dateOfCreation.Month-1] @dateOfCreation.Day, @dateOfCreation.Year</span>
                            </div>
                            <span class="order-status status-@status.ToString().ToLower()">@(status == Status.InProgress?"In Progress":status.ToString())</span>
                        </div>

                        <div class="order-details">
                            <div class="order-items">
                                @foreach (var orderedProduct in item.OrderedProducts)
                                {
                                    <div class="order-item" data-id="@orderedProduct.Product.Id" data-quantity="@orderedProduct.Quantity">
                                        <img src="@orderedProduct.Product.ImagePath" alt="" class="order-item-img">
                                        <div>
                                            <h4>@orderedProduct.Product.Name</h4>
                                            <p>Quantity: @orderedProduct.Quantity</p>
                                            <p>$@($"{orderedProduct.Product.Price:f2}")@(orderedProduct.Quantity>1?" each":"")</p>
                                        </div>
                                    </div>
                                }
                            </div>

                            <div class="order-summary">
                                <div class="summary-row">
                                    <span>Subtotal:</span>
                                    <span>$@($"{((double)total * 0.8):f2}")</span>
                                </div>
                                <div class="summary-row">
                                    <span>Shipping:</span>
                                    <span>$@(total <= 100 ? "10.00":"Free")</span>
                                </div>
                                <div class="summary-row">
                                    <span>Tax:</span>
                                    <span>$@($"{((double)total * 0.2):f2}")</span>
                                </div>
                                <div class="summary-row" style="font-weight: bold; font-size: 1.1em;">
                                    <span>Total:</span>
                                    <span>$@($"{total:f2}")</span>
                                </div>
                            </div>
                        </div>
                        @{
                            string isVisibleForNotCanceled = status == Status.Canceled ? "d-none" : "";
                        }
                        <div class="order-actions">
                            <button name="reorder-btn" class="btn btn-primary">Reorder</button>
                            <a asp-action="Create" asp-controller="Feedbacks" class="btn btn-secondary @isVisibleForNotCanceled">Leave Review</a>
                            <button name="cancel-btn" class="btn btn-secondary @(status != Status.InProgress && status != Status.Confirmed ? "d-none" : "")">Cancel Order</button>
                            <a href="mailto:support@giftshob.bg" class="btn btn-secondary @isVisibleForNotCanceled">Contact Support</a>
                        </div>
                    </div>

                }
            }
        </main>
    </div>
</div>
<script>
    document.querySelectorAll('button[name="reorder-btn"]').forEach(btn=>btn.addEventListener('click', function () {
        const card = this.closest('.order-card');
        const items = card.querySelectorAll('.order-item');
        const basket = [];
        items.forEach(item => {
            const productId = item.getAttribute('data-id');
            const quantity = parseInt(item.getAttribute('data-quantity'));
            basket.push({ id:productId, quantity });
        })
        sessionStorage.setItem('basket', JSON.stringify(basket));
        window.location.href = '/Orders/Create';
    }));
    document.querySelectorAll('button[name="cancel-btn"]').forEach(btn=>btn.addEventListener('click', function () {
        const card = this.closest('.order-card');
    }));
</script>
</body>
</html>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
}
